/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
File Name:	U2A3A1_MatchGame
Programmer:	Sneha Patel
Date:		April 27, 2020
Description:	This program uses arrays to simulate a matching game. A grid of 
                cards will be displayed and the user is to select 2 cards at a 
                time looking for matching cards. The goal of this game is to see
                how quickly the user can find all the matches.
 */

package MatchGame;

import java.util.*;
import javax.swing.ImageIcon;

/**
 *
 * @author patel
 */
public class MatchGame extends javax.swing.JFrame {
    
    ArrayList <String> cards = new ArrayList(); // arrayList to hold cards in a random order
    ArrayList <String> set = new ArrayList(); // arrayList to hold cards in original list
    
    // assignes images for matching to each variable
    ImageIcon a = new ImageIcon("barcelona.jpg"); 
    ImageIcon b = new ImageIcon("copenhagen.jpg");
    ImageIcon c = new ImageIcon("london.jpg");
    ImageIcon d = new ImageIcon("manaus.jpg");
    ImageIcon e = new ImageIcon("montreal.jpg");
    ImageIcon f = new ImageIcon("newyork.jpg");
    ImageIcon g = new ImageIcon("paris.jpg");
    ImageIcon h = new ImageIcon("riodejaneiro.jpg");
    ImageIcon i = new ImageIcon("tokyo.jpg");
    ImageIcon j = new ImageIcon("washington.jpg");
    ImageIcon back = new ImageIcon("cardback.jpg");
    ImageIcon done = new ImageIcon("done.jpg");
    
    int count, c1, c2;
    int cardsLeft = 20;
    int change [] = new int[20];
    
    

    /**
     * Creates new form MatchGame
     */
    public MatchGame() {
        super ("Matching Game");
        initComponents(); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTitle = new javax.swing.JLabel();
        Card1 = new javax.swing.JButton();
        Card2 = new javax.swing.JButton();
        Card3 = new javax.swing.JButton();
        Card4 = new javax.swing.JButton();
        Card5 = new javax.swing.JButton();
        Card6 = new javax.swing.JButton();
        Card7 = new javax.swing.JButton();
        Card8 = new javax.swing.JButton();
        Card9 = new javax.swing.JButton();
        Card10 = new javax.swing.JButton();
        Card11 = new javax.swing.JButton();
        Card12 = new javax.swing.JButton();
        Card13 = new javax.swing.JButton();
        Card14 = new javax.swing.JButton();
        Card15 = new javax.swing.JButton();
        Card16 = new javax.swing.JButton();
        Card17 = new javax.swing.JButton();
        Card18 = new javax.swing.JButton();
        Card19 = new javax.swing.JButton();
        Card20 = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        guessAgainButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        textOutput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTitle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        mainTitle.setText("Matching Game");

        Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card1MouseClicked(evt);
            }
        });

        Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card2MouseClicked(evt);
            }
        });

        Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card3MouseClicked(evt);
            }
        });

        Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card4MouseClicked(evt);
            }
        });

        Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card5MouseClicked(evt);
            }
        });

        Card6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card6MouseClicked(evt);
            }
        });

        Card7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card7MouseClicked(evt);
            }
        });

        Card8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card8MouseClicked(evt);
            }
        });

        Card9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card9MouseClicked(evt);
            }
        });

        Card10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card10MouseClicked(evt);
            }
        });

        Card11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card11MouseClicked(evt);
            }
        });

        Card12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card12MouseClicked(evt);
            }
        });

        Card13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card13MouseClicked(evt);
            }
        });

        Card14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card14MouseClicked(evt);
            }
        });

        Card15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card15MouseClicked(evt);
            }
        });

        Card16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card16MouseClicked(evt);
            }
        });

        Card17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card17MouseClicked(evt);
            }
        });

        Card18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card18MouseClicked(evt);
            }
        });

        Card19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card19MouseClicked(evt);
            }
        });

        Card20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchGame/cardback.jpg"))); // NOI18N
        Card20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card20MouseClicked(evt);
            }
        });
        Card20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Card20ActionPerformed(evt);
            }
        });

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        guessAgainButton.setText("Guess Again");
        guessAgainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessAgainButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        textOutput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textOutput.setText("Click the Play Button to start. Make sure to click the Guess Again Button after each guess.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(66, 66, 66)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Card9)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Card1)
                                        .addComponent(Card5)
                                        .addComponent(Card13)
                                        .addComponent(Card17))
                                    .addGap(66, 66, 66)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(Card2, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(Card6, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(Card10))
                                            .addComponent(Card14))
                                        .addComponent(Card18))
                                    .addGap(66, 66, 66)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Card15)
                                        .addComponent(Card11)
                                        .addComponent(Card7)
                                        .addComponent(Card3)
                                        .addComponent(Card19))))
                            .addGap(66, 66, 66)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Card8)
                                .addComponent(Card4)
                                .addComponent(Card12)
                                .addComponent(Card16)
                                .addComponent(Card20)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(290, 290, 290)
                            .addComponent(mainTitle))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(177, 177, 177)
                            .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(96, 96, 96)
                            .addComponent(guessAgainButton)
                            .addGap(97, 97, 97)
                            .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card3)
                    .addComponent(Card4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Card1)
                        .addComponent(Card2)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card7)
                    .addComponent(Card8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Card5)
                        .addComponent(Card6)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card12)
                    .addComponent(Card10)
                    .addComponent(Card11)
                    .addComponent(Card9))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card15)
                    .addComponent(Card16)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Card13)
                        .addComponent(Card14)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card19)
                    .addComponent(Card20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Card17)
                        .addComponent(Card18)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guessAgainButton)
                    .addComponent(playButton)
                    .addComponent(exitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Card20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Card20ActionPerformed
    }//GEN-LAST:event_Card20ActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // closes the application when exit button is clicked
        System.exit (0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        
        // Sets change array that will be used to check if a match is made
        for (int z = 0; z <= 19; z++) {
            change[z] = 1;
        }
        
        String temp;
        
        // Puts the numbers zero to two in two consecutive array entries in the set arrayList
        for (int x = 0; x <= 9; x++) {
            for (int y = 1; y <= 2; y++) {
                temp = Integer.toString(x);
                set.add(temp);
            }
        }
        
        // Assigns cards at random to the cards arrayList
        for (int x = 0; x <= 19; x++) {
            double index = Math.floor(Math.random() * (20-x)); // generates a random number but for one less element each loop
            int index1 = (int)index;
            cards.add(set.get(index1)); // adds the card to the random arrayList cards
            set.remove(set.get(index1)); // removes the card from the original set arrayList
        }
        
        playButton.setEnabled(false);
    }//GEN-LAST:event_playButtonActionPerformed

    private void Card1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card1MouseClicked
        
        String temp = cards.get(0); // checks what number is assigned to this card
        
        // Checks the number assigned to the card and assigns the correct picture based on number
        if (temp.equals("0")) {
            Card1.setIcon(a); // changes the button icon to the correct picture
        } else if (temp.equals("1")) {
            Card1.setIcon(b);
        } else if (temp.equals("2")) {
            Card1.setIcon(c);
        } else if (temp.equals("3")) {
            Card1.setIcon(d);
        } else if (temp.equals("4")) {
            Card1.setIcon(e);
        } else if (temp.equals("5")) {
            Card1.setIcon(f);
        } else if (temp.equals("6")) {
            Card1.setIcon(g);
        } else if (temp.equals("7")) {
            Card1.setIcon(h);
        } else if (temp.equals("8")) {
            Card1.setIcon(i);
        } else if (temp.equals("9")) {
            Card1.setIcon(j);
        }
        
        count++; // sets the card chosen to one or two so it can be checked for a match
        
        // Sets the chosen card to temporay variables to check for a match and sets the change array to show the card icon has been changed
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[0] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[0] = 0;
        }
    }//GEN-LAST:event_Card1MouseClicked

    private void Card2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card2MouseClicked
        
        String temp = cards.get(1); // checks what number is assigned to this card
        
        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card2.setIcon(a);
        } else if (temp.equals("1")) {
            Card2.setIcon(b);
        } else if (temp.equals("2")) {
            Card2.setIcon(c);
        } else if (temp.equals("3")) {
            Card2.setIcon(d);
        } else if (temp.equals("4")) {
            Card2.setIcon(e);
        } else if (temp.equals("5")) {
            Card2.setIcon(f);
        } else if (temp.equals("6")) {
            Card2.setIcon(g);
        } else if (temp.equals("7")) {
            Card2.setIcon(h);
        } else if (temp.equals("8")) {
            Card2.setIcon(i);
        } else if (temp.equals("9")) {
            Card2.setIcon(j);
        }
        
        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[1] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[1] = 0;
        }
    }//GEN-LAST:event_Card2MouseClicked

    private void Card3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card3MouseClicked
        
        String temp = cards.get(2); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card3.setIcon(a);
        } else if (temp.equals("1")) {
            Card3.setIcon(b);
        } else if (temp.equals("2")) {
            Card3.setIcon(c);
        } else if (temp.equals("3")) {
            Card3.setIcon(d);
        } else if (temp.equals("4")) {
            Card3.setIcon(e);
        } else if (temp.equals("5")) {
            Card3.setIcon(f);
        } else if (temp.equals("6")) {
            Card3.setIcon(g);
        } else if (temp.equals("7")) {
            Card3.setIcon(h);
        } else if (temp.equals("8")) {
            Card3.setIcon(i);
        } else if (temp.equals("9")) {
            Card3.setIcon(j);
        }
        
        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[2] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[2] = 0;
        }
    }//GEN-LAST:event_Card3MouseClicked

    private void Card4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card4MouseClicked
        
        String temp = cards.get(3); // checks what number is assigned to this card 
        
        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card4.setIcon(a);
        } else if (temp.equals("1")) {
            Card4.setIcon(b);
        } else if (temp.equals("2")) {
            Card4.setIcon(c);
        } else if (temp.equals("3")) {
            Card4.setIcon(d);
        } else if (temp.equals("4")) {
            Card4.setIcon(e);
        } else if (temp.equals("5")) {
            Card4.setIcon(f);
        } else if (temp.equals("6")) {
            Card4.setIcon(g);
        } else if (temp.equals("7")) {
            Card4.setIcon(h);
        } else if (temp.equals("8")) {
            Card4.setIcon(i);
        } else if (temp.equals("9")) {
            Card4.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[3] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[3] = 0;
        }
    }//GEN-LAST:event_Card4MouseClicked

    private void Card5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card5MouseClicked
        
        String temp = cards.get(4); // checks what number is assigned to this card
        
        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card5.setIcon(a);
        } else if (temp.equals("1")) {
            Card5.setIcon(b);
        } else if (temp.equals("2")) {
            Card5.setIcon(c);
        } else if (temp.equals("3")) {
            Card5.setIcon(d);
        } else if (temp.equals("4")) {
            Card5.setIcon(e);
        } else if (temp.equals("5")) {
            Card5.setIcon(f);
        } else if (temp.equals("6")) {
            Card5.setIcon(g);
        } else if (temp.equals("7")) {
            Card5.setIcon(h);
        } else if (temp.equals("8")) {
            Card5.setIcon(i);
        } else if (temp.equals("9")) {
            Card5.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[4] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[4] = 0;
        }
    }//GEN-LAST:event_Card5MouseClicked

    private void Card6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card6MouseClicked
        
        String temp = cards.get(5); // checks what number is assigned to this card
        
        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card6.setIcon(a);
        } else if (temp.equals("1")) {
            Card6.setIcon(b);
        } else if (temp.equals("2")) {
            Card6.setIcon(c);
        } else if (temp.equals("3")) {
            Card6.setIcon(d);
        } else if (temp.equals("4")) {
            Card6.setIcon(e);
        } else if (temp.equals("5")) {
            Card6.setIcon(f);
        } else if (temp.equals("6")) {
            Card6.setIcon(g);
        } else if (temp.equals("7")) {
            Card6.setIcon(h);
        } else if (temp.equals("8")) {
            Card6.setIcon(i);
        } else if (temp.equals("9")) {
            Card6.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[5] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[5] = 0;
        }
    }//GEN-LAST:event_Card6MouseClicked

    private void Card7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card7MouseClicked
        
        String temp = cards.get(6); // checks what number is assigned to this card
        
        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card7.setIcon(a);
        } else if (temp.equals("1")) {
            Card7.setIcon(b);
        } else if (temp.equals("2")) {
            Card7.setIcon(c);
        } else if (temp.equals("3")) {
            Card7.setIcon(d);
        } else if (temp.equals("4")) {
            Card7.setIcon(e);
        } else if (temp.equals("5")) {
            Card7.setIcon(f);
        } else if (temp.equals("6")) {
            Card7.setIcon(g);
        } else if (temp.equals("7")) {
            Card7.setIcon(h);
        } else if (temp.equals("8")) {
            Card7.setIcon(i);
        } else if (temp.equals("9")) {
            Card7.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[6] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[6] = 0;
        }
    }//GEN-LAST:event_Card7MouseClicked

    private void Card8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card8MouseClicked
        
        String temp = cards.get(7); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card8.setIcon(a);
        } else if (temp.equals("1")) {
            Card8.setIcon(b);
        } else if (temp.equals("2")) {
            Card8.setIcon(c);
        } else if (temp.equals("3")) {
            Card8.setIcon(d);
        } else if (temp.equals("4")) {
            Card8.setIcon(e);
        } else if (temp.equals("5")) {
            Card8.setIcon(f);
        } else if (temp.equals("6")) {
            Card8.setIcon(g);
        } else if (temp.equals("7")) {
            Card8.setIcon(h);
        } else if (temp.equals("8")) {
            Card8.setIcon(i);
        } else if (temp.equals("9")) {
            Card8.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[7] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[7] = 0;
        }
    }//GEN-LAST:event_Card8MouseClicked

    private void Card9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card9MouseClicked
        
        String temp = cards.get(8); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card9.setIcon(a);
        } else if (temp.equals("1")) {
            Card9.setIcon(b);
        } else if (temp.equals("2")) {
            Card9.setIcon(c);
        } else if (temp.equals("3")) {
            Card9.setIcon(d);
        } else if (temp.equals("4")) {
            Card9.setIcon(e);
        } else if (temp.equals("5")) {
            Card9.setIcon(f);
        } else if (temp.equals("6")) {
            Card9.setIcon(g);
        } else if (temp.equals("7")) {
            Card9.setIcon(h);
        } else if (temp.equals("8")) {
            Card9.setIcon(i);
        } else if (temp.equals("9")) {
            Card9.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[8] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[8] = 0;
        }
    }//GEN-LAST:event_Card9MouseClicked

    private void Card10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card10MouseClicked
        
        String temp = cards.get(9); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card10.setIcon(a);
        } else if (temp.equals("1")) {
            Card10.setIcon(b);
        } else if (temp.equals("2")) {
            Card10.setIcon(c);
        } else if (temp.equals("3")) {
            Card10.setIcon(d);
        } else if (temp.equals("4")) {
            Card10.setIcon(e);
        } else if (temp.equals("5")) {
            Card10.setIcon(f);
        } else if (temp.equals("6")) {
            Card10.setIcon(g);
        } else if (temp.equals("7")) {
            Card10.setIcon(h);
        } else if (temp.equals("8")) {
            Card10.setIcon(i);
        } else if (temp.equals("9")) {
            Card10.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[9] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[9] = 0;
        }
    }//GEN-LAST:event_Card10MouseClicked

    private void Card11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card11MouseClicked
        
        String temp = cards.get(10); // checks what number is assigned to this card 

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card11.setIcon(a);
        } else if (temp.equals("1")) {
            Card11.setIcon(b);
        } else if (temp.equals("2")) {
            Card11.setIcon(c);
        } else if (temp.equals("3")) {
            Card11.setIcon(d);
        } else if (temp.equals("4")) {
            Card11.setIcon(e);
        } else if (temp.equals("5")) {
            Card11.setIcon(f);
        } else if (temp.equals("6")) {
            Card11.setIcon(g);
        } else if (temp.equals("7")) {
            Card11.setIcon(h);
        } else if (temp.equals("8")) {
            Card11.setIcon(i);
        } else if (temp.equals("9")) {
            Card11.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[10] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[10] = 0;
        }
    }//GEN-LAST:event_Card11MouseClicked

    private void Card12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card12MouseClicked
        
        String temp = cards.get(11); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card12.setIcon(a);
        } else if (temp.equals("1")) {
            Card12.setIcon(b);
        } else if (temp.equals("2")) {
            Card12.setIcon(c);
        } else if (temp.equals("3")) {
            Card12.setIcon(d);
        } else if (temp.equals("4")) {
            Card12.setIcon(e);
        } else if (temp.equals("5")) {
            Card12.setIcon(f);
        } else if (temp.equals("6")) {
            Card12.setIcon(g);
        } else if (temp.equals("7")) {
            Card12.setIcon(h);
        } else if (temp.equals("8")) {
            Card12.setIcon(i);
        } else if (temp.equals("9")) {
            Card12.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[11] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[11] = 0;
        }
    }//GEN-LAST:event_Card12MouseClicked

    private void Card13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card13MouseClicked
        
        String temp = cards.get(12); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card13.setIcon(a);
        } else if (temp.equals("1")) {
            Card13.setIcon(b);
        } else if (temp.equals("2")) {
            Card13.setIcon(c);
        } else if (temp.equals("3")) {
            Card13.setIcon(d);
        } else if (temp.equals("4")) {
            Card13.setIcon(e);
        } else if (temp.equals("5")) {
            Card13.setIcon(f);
        } else if (temp.equals("6")) {
            Card13.setIcon(g);
        } else if (temp.equals("7")) {
            Card13.setIcon(h);
        } else if (temp.equals("8")) {
            Card13.setIcon(i);
        } else if (temp.equals("9")) {
            Card13.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[12] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[12] = 0;
        }
    }//GEN-LAST:event_Card13MouseClicked

    private void Card14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card14MouseClicked
        String temp = cards.get(13); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card14.setIcon(a);
        } else if (temp.equals("1")) {
            Card14.setIcon(b);
        } else if (temp.equals("2")) {
            Card14.setIcon(c);
        } else if (temp.equals("3")) {
            Card14.setIcon(d);
        } else if (temp.equals("4")) {
            Card14.setIcon(e);
        } else if (temp.equals("5")) {
            Card14.setIcon(f);
        } else if (temp.equals("6")) {
            Card14.setIcon(g);
        } else if (temp.equals("7")) {
            Card14.setIcon(h);
        } else if (temp.equals("8")) {
            Card14.setIcon(i);
        } else if (temp.equals("9")) {
            Card14.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[13] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[13] = 0;
        }
    }//GEN-LAST:event_Card14MouseClicked

    private void Card15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card15MouseClicked
        
        String temp = cards.get(14); // checks what number is assigned to this card 

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card15.setIcon(a);
        } else if (temp.equals("1")) {
            Card15.setIcon(b);
        } else if (temp.equals("2")) {
            Card15.setIcon(c);
        } else if (temp.equals("3")) {
            Card15.setIcon(d);
        } else if (temp.equals("4")) {
            Card15.setIcon(e);
        } else if (temp.equals("5")) {
            Card15.setIcon(f);
        } else if (temp.equals("6")) {
            Card15.setIcon(g);
        } else if (temp.equals("7")) {
            Card15.setIcon(h);
        } else if (temp.equals("8")) {
            Card15.setIcon(i);
        } else if (temp.equals("9")) {
            Card15.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[14] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[14] = 0;
        }
    }//GEN-LAST:event_Card15MouseClicked

    private void Card16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card16MouseClicked
        
        String temp = cards.get(15); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card16.setIcon(a);
        } else if (temp.equals("1")) {
            Card16.setIcon(b);
        } else if (temp.equals("2")) {
            Card16.setIcon(c);
        } else if (temp.equals("3")) {
            Card16.setIcon(d);
        } else if (temp.equals("4")) {
            Card16.setIcon(e);
        } else if (temp.equals("5")) {
            Card16.setIcon(f);
        } else if (temp.equals("6")) {
            Card16.setIcon(g);
        } else if (temp.equals("7")) {
            Card16.setIcon(h);
        } else if (temp.equals("8")) {
            Card16.setIcon(i);
        } else if (temp.equals("9")) {
            Card16.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[15] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[15] = 0;
        }
    }//GEN-LAST:event_Card16MouseClicked

    private void Card17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card17MouseClicked
        
        String temp = cards.get(16); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card17.setIcon(a);
        } else if (temp.equals("1")) {
            Card17.setIcon(b);
        } else if (temp.equals("2")) {
            Card17.setIcon(c);
        } else if (temp.equals("3")) {
            Card17.setIcon(d);
        } else if (temp.equals("4")) {
            Card17.setIcon(e);
        } else if (temp.equals("5")) {
            Card17.setIcon(f);
        } else if (temp.equals("6")) {
            Card17.setIcon(g);
        } else if (temp.equals("7")) {
            Card17.setIcon(h);
        } else if (temp.equals("8")) {
            Card17.setIcon(i);
        } else if (temp.equals("9")) {
            Card17.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[16] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[16] = 0;
        }
    }//GEN-LAST:event_Card17MouseClicked

    private void Card18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card18MouseClicked
        
        String temp = cards.get(17); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card18.setIcon(a);
        } else if (temp.equals("1")) {
            Card18.setIcon(b);
        } else if (temp.equals("2")) {
            Card18.setIcon(c);
        } else if (temp.equals("3")) {
            Card18.setIcon(d);
        } else if (temp.equals("4")) {
            Card18.setIcon(e);
        } else if (temp.equals("5")) {
            Card18.setIcon(f);
        } else if (temp.equals("6")) {
            Card18.setIcon(g);
        } else if (temp.equals("7")) {
            Card18.setIcon(h);
        } else if (temp.equals("8")) {
            Card18.setIcon(i);
        } else if (temp.equals("9")) {
            Card18.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[17] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[17] = 0;
        }
    }//GEN-LAST:event_Card18MouseClicked

    private void Card19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card19MouseClicked
        
        String temp = cards.get(18); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card19.setIcon(a);
        } else if (temp.equals("1")) {
            Card19.setIcon(b);
        } else if (temp.equals("2")) {
            Card19.setIcon(c);
        } else if (temp.equals("3")) {
            Card19.setIcon(d);
        } else if (temp.equals("4")) {
            Card19.setIcon(e);
        } else if (temp.equals("5")) {
            Card19.setIcon(f);
        } else if (temp.equals("6")) {
            Card19.setIcon(g);
        } else if (temp.equals("7")) {
            Card19.setIcon(h);
        } else if (temp.equals("8")) {
            Card19.setIcon(i);
        } else if (temp.equals("9")) {
            Card19.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[18] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[18] = 0;
        }
    }//GEN-LAST:event_Card19MouseClicked

    private void Card20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card20MouseClicked
        
        String temp = cards.get(19); // checks what number is assigned to this card

        // checks the number assigned to the card and changes the button icon to the correct picture
        if (temp.equals("0")) {
            Card20.setIcon(a);
        } else if (temp.equals("1")) {
            Card20.setIcon(b);
        } else if (temp.equals("2")) {
            Card20.setIcon(c);
        } else if (temp.equals("3")) {
            Card20.setIcon(d);
        } else if (temp.equals("4")) {
            Card20.setIcon(e);
        } else if (temp.equals("5")) {
            Card20.setIcon(f);
        } else if (temp.equals("6")) {
            Card20.setIcon(g);
        } else if (temp.equals("7")) {
            Card20.setIcon(h);
        } else if (temp.equals("8")) {
            Card20.setIcon(i);
        } else if (temp.equals("9")) {
            Card20.setIcon(j);
        }

        // sets the card chosen to one or two and assignes it to temporary variables to check for a match
        // and sets the change array to show that the card icon has been changed
        count++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[19] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[19] = 0;
        }
    }//GEN-LAST:event_Card20MouseClicked

    private void guessAgainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessAgainButtonActionPerformed
        
        count = 0;
        
        // checks to see if the two cards chosen are the same cards, if they are then changes the button to the done icon
        if (c1 == c2) {
            cardsLeft = cardsLeft - 2; // decreases the total unmatched cards left by two
            for (int y = 1; y <= 2; y++) {
                if (change[0] == 0) {
                    Card1.setIcon(done); // sets the card button to done icon
                    change[0] = 2; // sets the change array to show that the card icon is changed to the done icon
                } else if (change[1] == 0) {
                    Card2.setIcon(done);
                    change[1] = 2;
                } else if (change[2] == 0) {
                    Card3.setIcon(done);
                    change[2] = 2;
                } else if (change[3] == 0) {
                    Card4.setIcon(done);
                    change[3] = 2;
                } else if (change[4] == 0) {
                    Card5.setIcon(done);
                    change[4] = 2;
                } else if (change[5] == 0) {
                    Card6.setIcon(done);
                    change[5] = 2;
                } else if (change[6] == 0) {
                    Card7.setIcon(done);
                    change[6] = 2;
                } else if (change[7] == 0) {
                    Card8.setIcon(done);
                    change[7] = 2;
                } else if (change[8] == 0) {
                    Card9.setIcon(done);
                    change[8] = 2;
                } else if (change[9] == 0) {
                    Card10.setIcon(done);
                    change[9] = 2;
                } else if (change[10] == 0) {
                    Card11.setIcon(done);
                    change[10] = 2;
                } else if (change[11] == 0) {
                    Card12.setIcon(done);
                    change[11] = 2;
                } else if (change[12] == 0) {
                    Card13.setIcon(done);
                    change[12] = 2;
                } else if (change[13] == 0) {
                    Card14.setIcon(done);
                    change[13] = 2;
                } else if (change[14] == 0) {
                    Card15.setIcon(done);
                    change[14] = 2;
                } else if (change[15] == 0) {
                    Card16.setIcon(done);
                    change[15] = 2;
                } else if (change[16] == 0) {
                    Card17.setIcon(done);
                    change[16] = 2;
                } else if (change[17] == 0) {
                    Card18.setIcon(done);
                    change[17] = 2;
                } else if (change[18] == 0) {
                    Card19.setIcon(done);
                    change[18] = 2;
                } else if (change[19] == 0) {
                    Card20.setIcon(done);
                    change[19] = 2;
                }
            }
            // checks if all cards are matched and if they are then it displays a congratulation message in the text field
            if (cardsLeft == 0) {
               textOutput.setText ("Congratulations! You have found all the matches!"); // displays congratulation message
            }
        
        // if the two chosen cards are not the same, then changes the card button back to the card back icon
        } else {
            for (int y = 1; y <= 2; y++) {
                if (change[0] == 0) {
                    Card1.setIcon(back); // sets the card button to the card back icon
                    change[0] = 1; // sets the change array to show that the card icon is changed to the card back icon
                } else if (change[1] == 0) {
                    Card2.setIcon(back);
                    change[1] = 1;
                } else if (change[2] == 0) {
                    Card3.setIcon(back);
                    change[2] = 1;
                } else if (change[3] == 0) {
                    Card4.setIcon(back);
                    change[3] = 1;
                } else if (change[4] == 0) {
                    Card5.setIcon(back);
                    change[4] = 1;
                } else if (change[5] == 0) {
                    Card6.setIcon(back);
                    change[5] = 1;
                } else if (change[6] == 0) {
                    Card7.setIcon(back);
                    change[6] = 1;
                } else if (change[7] == 0) {
                    Card8.setIcon(back);
                    change[7] = 1;
                } else if (change[8] == 0) {
                    Card9.setIcon(back);
                    change[8] = 1;
                } else if (change[9] == 0) {
                    Card10.setIcon(back);
                    change[9] = 1;
                } else if (change[10] == 0) {
                    Card11.setIcon(back);
                    change[10] = 1;
                } else if (change[11] == 0) {
                    Card12.setIcon(back);
                    change[11] = 1;
                } else if (change[12] == 0) {
                    Card13.setIcon(back);
                    change[12] = 1;
                } else if (change[13] == 0) {
                    Card14.setIcon(back);
                    change[13] = 1;
                } else if (change[14] == 0) {
                    Card15.setIcon(back);
                    change[14] = 1;
                } else if (change[15] == 0) {
                    Card16.setIcon(back);
                    change[15] = 1;
                } else if (change[16] == 0) {
                    Card17.setIcon(back);
                    change[16] = 1;
                } else if (change[17] == 0) {
                    Card18.setIcon(back);
                    change[17] = 1;
                } else if (change[18] == 0) {
                    Card19.setIcon(back);
                    change[18] = 1;
                } else if (change[19] == 0) {
                    Card20.setIcon(back);
                    change[19] = 1;
                }
            }
        }

    }//GEN-LAST:event_guessAgainButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatchGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatchGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatchGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatchGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Card1;
    private javax.swing.JButton Card10;
    private javax.swing.JButton Card11;
    private javax.swing.JButton Card12;
    private javax.swing.JButton Card13;
    private javax.swing.JButton Card14;
    private javax.swing.JButton Card15;
    private javax.swing.JButton Card16;
    private javax.swing.JButton Card17;
    private javax.swing.JButton Card18;
    private javax.swing.JButton Card19;
    private javax.swing.JButton Card2;
    private javax.swing.JButton Card20;
    private javax.swing.JButton Card3;
    private javax.swing.JButton Card4;
    private javax.swing.JButton Card5;
    private javax.swing.JButton Card6;
    private javax.swing.JButton Card7;
    private javax.swing.JButton Card8;
    private javax.swing.JButton Card9;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton guessAgainButton;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JButton playButton;
    private javax.swing.JTextField textOutput;
    // End of variables declaration//GEN-END:variables
}
